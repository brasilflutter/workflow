name: "Build Android"

on:
  workflow_call:
    secrets:
      ANDROID_STOREPASSWORD:
        required: true
      ANDROID_KEYSTORE:
        required: true
      API_KEY:
        required: true
      PLAY_AUTH_JSON:
        required: true
jobs:
  build-android:
    env:
      TESTE3: "21"
      TESTE: ${{ vars.TESTE }}

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: "17.x"

      - name: Setup Flutter
        uses: subosito/flutter-action@v2.14.0
        with:
          flutter-version: 3.29.0
          channel: stable

      - name: Exibir a versao instalada do Flutter
        run: flutter --version

      - name: Clean
        run: flutter clean

      - name: Install dependencies
        run: flutter pub get

      - name: Generate .env
        run: |
          touch .env
          echo "API_KEY=${{ secrets.API_KEY }}" >> .env
          echo "TESTE=${{ vars.TESTE }}" >> .env
          echo "TESTE3=${{ env.TESTE3 }}" >> .env
          cat .env
      - name: Generate keyproperties
        run: |
          cd android
          touch key.properties
          echo "storePassword=${{ secrets.ANDROID_STOREPASSWORD }}" >> key.properties
          echo "keyPassword=${{ secrets.ANDROID_STOREPASSWORD }}" >> key.properties
          echo "keyAlias=upload" >> key.properties
          echo "storeFile=./keystore.jks" >> key.properties
          cat key.properties
      - name: Generate keyproperties
        env:
          ANDROID_KEYSTORE: ${{ secrets.ANDROID_KEYSTORE }}
        run: echo "$ANDROID_KEYSTORE" | base64 -d >> ./android/app/keystore.jks

      # - name: Run Build Runner
      #   run: dart run build_runner build -d

      - name: Statically analyze
        run: flutter analyze .

      - name: Run Tests
        run: flutter test

      - name: Build apk.
        run: flutter build apk --release
      - name: Build appBundle.
        run: flutter build appbundle --release

      # - uses: r0adkll/sign-android-release@v1
      #   name: Sign app APK
      #   id: sign_app
      #   with:
      #     releaseDirectory: build/app/outputs/bundle/release
      #     signingKeyBase64: ${{ secrets.ANDROID_KEYSTORE }}
      #     keyStorePassword: ${{   secrets.ANDROID_STOREPASSWORD }}
      #     alias: upload
      #     keyPassword: ${{ secrets.ANDROID_STOREPASSWORD }}
      - name: Setup Authorization with Google Play Store
        run: echo '${{ secrets.PLAY_AUTH_JSON }}' > service_account.json
      - name: Deploy bundle to Google Play
        uses: r0adkll/upload-google-play@v1.1.3
        with:
          serviceAccountJson: service_account.json
          packageName: com.flutterbrasil.conversor_moedas
          releaseFiles: build/app/outputs/bundle/release/app-release.aab
          track: "internal"
          status: "completed"
          whatsNewDirectory: whatsNew/
      - name: Upload Artifact
        uses: actions/upload-artifact@main
        with:
          name: release-apk
          path: build/app/outputs/flutter-apk/app-release.apk
